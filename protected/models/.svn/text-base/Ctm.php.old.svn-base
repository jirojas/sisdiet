<?php

/**
 * This is the model class for table "maquinaria.ctm".
 *
 * The followings are the available columns in table 'maquinaria.ctm':
 * @property integer $id
 * @property integer $id_obra_pk
 * @property string $descripcion
 * @property integer $id_material
 * @property double $cantidad_global
 * @property double $cantidad_colocada
 * @property string $fecha_inicio
 * @property string $fecha_fin
 * @property boolean $blnborrado
 * @property integer $created_by
 * @property integer $modified_by
 * @property string $created_date
 * @property string $modified_date
 * @property integer $id_actividaddiaria
 * @property integer $id_estado_7
 */
class Ctm extends CActiveRecord
{
 public $fecha_inicio_range = array(); 
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'maquinaria.ctm';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('id_obra_pk, id_material, created_by, modified_by, id_actividaddiaria, id_estado_7', 'numerical', 'integerOnly'=>true),
			array('cantidad_global, cantidad_colocada', 'numerical'),
			array('descripcion', 'length', 'max'=>200),
			array('id_material,fecha_inicio,cantidad_global', 'required'),
			array('fecha_inicio, fecha_fin, blnborrado, created_date, modified_date', 'safe'),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, id_obra_pk, descripcion, id_material, fecha_range, cantidad_global, cantidad_colocada, fecha_inicio, fecha_fin, blnborrado, created_by, modified_by, created_date, modified_date, id_actividaddiaria, id_estado_7', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
                    'materiales' => array(self::BELONGS_TO, 'Tblmateriales', 'id_material'),
                    'estado' => array(self::BELONGS_TO, 'TblEstado', 'id_estado_7'),
                      'idObra' => array(self::BELONGS_TO, 'Obra', 'id_obra_pk'),  
                    
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'id_obra_pk' => 'Id Obra Pk',
			'descripcion' => 'Descripcion',
			'id_material' => 'Material',
			'cantidad_global' => 'Cantidad Utilizada',
			'cantidad_colocada' => 'Cantidad Colocada',
			'fecha_inicio' => 'Fecha Inicio',
			'fecha_fin' => 'Fecha Fin',
			'blnborrado' => 'Blnborrado',
			'created_by' => 'Created By',
			'modified_by' => 'Modified By',
			'created_date' => 'Created Date',
			'modified_date' => 'Modified Date',
			'id_actividaddiaria' => 'Id Actividaddiaria',
			'id_estado_7' => 'Id Estado 7',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;
                $sort=new CSort();

		$criteria->compare('id',$this->id);
		$criteria->compare('id_obra_pk',$this->id_obra_pk);
		$criteria->compare('descripcion',$this->descripcion,true);
		$criteria->compare('id_material',$this->id_material);
		$criteria->compare('cantidad_global',$this->cantidad_global);
		$criteria->compare('cantidad_colocada',$this->cantidad_colocada);
		$criteria->compare('fecha_inicio',$this->fecha_inicio,true);
		$criteria->compare('fecha_fin',$this->fecha_fin,true);
		$criteria->compare('blnborrado',$this->blnborrado);
		$criteria->compare('created_by',$this->created_by);
		$criteria->compare('modified_by',$this->modified_by);
		$criteria->compare('created_date',$this->created_date,true);
		$criteria->compare('modified_date',$this->modified_date,true);
		$criteria->compare('id_actividaddiaria',$this->id_actividaddiaria);
		$criteria->compare('id_estado_7',$this->id_estado_7);
               $from = $to = '';
                $_SESSION['from_emi'] = $_SESSION['to_emi'] = $_SESSION['cuenta'] = '';
            if (count($this->fecha_inicio_range)>=1) {
                if (isset($this->fecha_inicio_range['from'])) {
                    $from = $this->fecha_inicio_range['from'];
                    $_SESSION['from_emi'] = $from; //Aca guardamos en sesion para tener el valor en el reporte y lo pasamos a traves del controlador
                }
                if (isset($this->fecha_inicio_range['to'])) {
                    $to= $this->fecha_inicio_range['to'];
                    $_SESSION['to_emi'] = $to; //Aca guardamos en sesion para tener el valor en el reporte y lo pasamos a traves del controlador
                }
            }
           

            if ($from!='' || $to !='') {
                if ($from!='' && $to!='') {
                    //$from = date("d-m-Y", strtotime($from));ojo:ASI ESTABA ORIGINAL lo cambie para la busqueda por aÃ±o,mes y dia
                    //$to = date("d-m-Y", strtotime($to));
                    $from = date("Y-m-d", strtotime($from));
                    $to = date("Y-m-d", strtotime($to));
                    $criteria->compare('fecha',">= $from",false);
                    $criteria->compare('fecha',"<= $to",false);
                }
                else {
                    if ($from!='') $creation_time = $from;
                    if ($to != '') $creation_time = $to;
                    //$creation_time = date("d-m-Y", strtotime($creation_time));
                    $creation_time = date("Y-m-d", strtotime($creation_time));
                    $criteria->compare('fecha', "$creation_time" ,false);
                }
            }
 
                
                
                
		  $_SESSION['datos_filtrados'] = new CActiveDataProvider($this, array(
                      'criteria'=>$criteria,
                      'sort'=>$sort,
                      'pagination'=>false,
              ));

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return Ctm the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
}
