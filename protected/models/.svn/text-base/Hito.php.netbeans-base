<?php


class Hito extends CActiveRecord
{
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'valuaciones.hito';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('id_obra,id_estatus, id_contrato, num, created_by, modified_by', 'numerical', 'integerOnly'=>true),
                        array('descripcion,id_estatus, fechacumplimiento', 'required'),
			array('descripcion, fechacreacion,id_estatus, fechacumplimiento, blnborrado, created_date, modified_date', 'safe'),
			array('id, id_obra, id_contrato, num,id_estatus, descripcion, fechacreacion, fechacumplimiento, blnborrado,'
                            . ' created_date, modified_date, created_by, modified_by', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
                      'Restatus' => array(self::BELONGS_TO, 'Estatushito', 'id_estatus'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'id_obra' => 'Numero de Obra',
			'id_contrato' => 'Numero de Contrato',
			'num' => 'Correlativo',
			'descripcion' => 'Descripcion',
			'fechacreacion' => 'Fecha de creacion',
			'fechacumplimiento' => 'Fecha de cumplimiento',
			'blnborrado' => 'Blnborrado',
			'created_date' => 'Created Date',
			'modified_date' => 'Modified Date',
			'created_by' => 'Created By',
			'modified_by' => 'Modified By',
			'id_estatus' => 'Estatus del hito',
		);
	}


	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id);
		$criteria->compare('id_obra',$this->id_obra);
		$criteria->compare('id_contrato',$this->id_contrato);
		$criteria->compare('num',$this->num);
		$criteria->compare('descripcion',$this->descripcion,true);
		$criteria->compare('fechacreacion',$this->fechacreacion,true);
		$criteria->compare('fechacumplimiento',$this->fechacumplimiento,true);
		$criteria->compare('blnborrado',$this->blnborrado);
		$criteria->compare('created_date',$this->created_date,true);
		$criteria->compare('modified_date',$this->modified_date,true);
		$criteria->compare('created_by',$this->created_by);
		$criteria->compare('modified_by',$this->modified_by);
		$criteria->compare('id_estatus',$this->id_estatus);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}


	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
        
        public function behaviors()
{
    return array(
        'CTimestampBehavior' => array(
            'class' => 'zii.behaviors.CTimestampBehavior',
            'createAttribute' => 'created_date',
            'updateAttribute' => 'modified_date',
            'setUpdateOnCreate' => true,
        ),
        'BlameableBehavior' => array(
            'class' => 'application.components.behaviors.BlameableBehavior',
            'createdByColumn' => 'created_by', 
            'updatedByColumn' => 'modified_by',  
        ),
    );  
}
        
        
        
}
