<?php

/**
 * This is the model class for table "mantenimiento1.materiales_actividad_mantenimiento".
 *
 * The followings are the available columns in table 'mantenimiento1.materiales_actividad_mantenimiento':
 * @property integer $id
 * @property integer $id_obra_pk_m
 * @property string $descripcion
 * @property integer $id_material_mantenimiento
 * @property double $cantidad_global
 * @property double $cantidad_colocada
 * @property boolean $blnborrado
 * @property integer $created_by
 * @property integer $modified_by
 * @property string $created_date
 * @property string $modified_date
 * @property integer $id_actividaddiaria
 * @property integer $id_materialesobra
 * @property integer $id_estado_fk7
 * @property string $fecha
 */
class MaterialesActividadMantenimiento extends CActiveRecord
{
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'mantenimiento1.materiales_actividad_mantenimiento';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
                     array( 'id_material_mantenimiento, cantidad_colocada, fecha', 'required'),
			array('id_obra_pk_m, id_material_mantenimiento, created_by, modified_by, id_actividaddiaria, id_materialesobra, id_estado_fk7', 'numerical', 'integerOnly'=>true),
			array('cantidad_global, cantidad_colocada', 'numerical'),
			array('descripcion', 'length', 'max'=>200),
			array('blnborrado, created_date, modified_date, fecha', 'safe'),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, id_obra_pk_m, descripcion, id_material_mantenimiento, cantidad_global, cantidad_colocada, blnborrado, created_by, modified_by, created_date, modified_date, id_actividaddiaria, id_materialesobra, id_estado_fk7, fecha', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
                    
                    'materiales' => array(self::BELONGS_TO, 'Tblmateriales', 'id_material_mantenimiento'),
                    'idObra' => array(self::BELONGS_TO, 'Obramantenimiento', 'id_obra_pk'),
                    'Estado' => array(self::BELONGS_TO, 'TblEstado', 'id_estado_fk7'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'id_obra_pk_m' => 'Id Obra Pk M',
			'descripcion' => 'Descripcion',
			'id_material_mantenimiento' => 'Material',
			'cantidad_global' => 'Cantidad Global',
			'cantidad_colocada' => 'Cantidad Colocada',
			'blnborrado' => 'Blnborrado',
			'created_by' => 'Created By',
			'modified_by' => 'Modified By',
			'created_date' => 'Created Date',
			'modified_date' => 'Modified Date',
			'id_actividaddiaria' => 'Id Actividaddiaria',
			'id_materialesobra' => 'Id Materialesobra',
			'id_estado_fk7' => 'Estado',
			'fecha' => 'Fecha',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id);
		$criteria->compare('id_obra_pk_m',$this->id_obra_pk_m);
		$criteria->compare('descripcion',$this->descripcion,true);
		$criteria->compare('id_material_mantenimiento',$this->id_material_mantenimiento);
		$criteria->compare('cantidad_global',$this->cantidad_global);
		$criteria->compare('cantidad_colocada',$this->cantidad_colocada);
		$criteria->compare('blnborrado',$this->blnborrado);
		$criteria->compare('created_by',$this->created_by);
		$criteria->compare('modified_by',$this->modified_by);
		$criteria->compare('created_date',$this->created_date,true);
		$criteria->compare('modified_date',$this->modified_date,true);
		$criteria->compare('id_actividaddiaria',$this->id_actividaddiaria);
		$criteria->compare('id_materialesobra',$this->id_materialesobra);
		$criteria->compare('id_estado_fk7',$this->id_estado_fk7);
		$criteria->compare('fecha',$this->fecha,true);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return MaterialesActividadMantenimiento the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
}
