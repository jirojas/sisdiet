<?php

/**
 * This is the model class for table "alumbrado.solicitudestatus".
 *
 * The followings are the available columns in table 'alumbrado.solicitudestatus':
 * @property integer $id
 * @property integer $id_solicitud
 * @property integer $id_estatus
 * @property string $observacion
 * @property string $fecha
 * @property boolean $blnborrado
 * @property integer $created_by
 * @property integer $modified_by
 * @property string $created_date
 * @property string $modified_date
 *
 * The followings are the available model relations:
 * @property Estatusalumbrado $idEstatus
 * @property Solicitud $idSolicitud
 */
class Solicitudestatus extends CActiveRecord
{
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'alumbrado.solicitudestatus';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('id_solicitud, id_estatus, created_by, modified_by', 'numerical', 'integerOnly'=>true),
			array('observacion, fecha, blnborrado, created_date, modified_date', 'safe'),
                    	array('id_estatus, fecha', 'required'),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, id_solicitud, id_estatus, observacion, fecha, blnborrado, created_by, modified_by, created_date, modified_date', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'idEstatus' => array(self::BELONGS_TO, 'Estatusalumbrado', 'id_estatus'),
			'idSolicitud' => array(self::BELONGS_TO, 'Solicitud', 'id_solicitud'),
                         'idUsuario' => array(self::BELONGS_TO, 'Usuario', 'created_by'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'id_solicitud' => 'Id Solicitud',
			'id_estatus' => 'Estatus',
			'observacion' => 'Observacion',
			'fecha' => 'Fecha',
			'blnborrado' => 'Blnborrado',
			'created_by' => 'Created By',
			'modified_by' => 'Modified By',
			'created_date' => 'Created Date',
			'modified_date' => 'Modified Date',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id);
		$criteria->compare('id_solicitud',$this->id_solicitud);
		$criteria->compare('id_estatus',$this->id_estatus);
		$criteria->compare('observacion',$this->observacion,true);
		$criteria->compare('fecha',$this->fecha,true);
		$criteria->compare('blnborrado',$this->blnborrado);
		$criteria->compare('created_by',$this->created_by);
		$criteria->compare('modified_by',$this->modified_by);
		$criteria->compare('created_date',$this->created_date,true);
		$criteria->compare('modified_date',$this->modified_date,true);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return Solicitudestatus the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
        
               public function behaviors()
{
    return array(
        'CTimestampBehavior' => array(
            'class' => 'zii.behaviors.CTimestampBehavior',
            'createAttribute' => 'created_date',
            'updateAttribute' => 'modified_date',
            'setUpdateOnCreate' => true,
        ),
        'BlameableBehavior' => array(
            'class' => 'application.components.behaviors.BlameableBehavior',
            'createdByColumn' => 'created_by', 
            'updatedByColumn' => 'modified_by',  
        ),
    );
}
        
        
}
